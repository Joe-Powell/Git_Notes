			
			
			
			
			TOUCH 
				creates new file
				touch style.css 
				
		    OPEN IN VISUAL STUDIO,
				just type code .    enter  while in the directory
			
		1/  right click on file to bash here and be in directory
		2/   must do! git init INNITIALIZES GIT REPOSITORY

				git status shows what files are staged 
				git config --global user.name 'joe powell'
				git add index.html  you can add changes 
				
				git status 
				git add *.html will commit all .html files to staging
				git rm --cached index.html  removes index.html 
				get add .    will add everything    you can add changes also
				
				so when you make a change to the file, and then check git status,
				it  will show modified ndex.html so just do git add index.html
				or...  git add .   to save changes, it is not commited yet 
				
				
				
			TO COMMIT,wq
					git commit  cant type anymore so click i to go into insert mode
					you must enter a commit message first not commented out to commit 
					you can remove a # comment if you want
					then you can type to get OUT hit esc :wq then enter 
					
					WHEN COMMITING YOU CAN SKIP THE EDIT STAGE in git bash by typing 
						git commit -m 'this is the message'  then enter  this will add the message
						since it must have a message...
					
					so thats how you create a commit to master. any changes you make
					after that and save it, it wont be saved to master unless you commit it.
					even though its changes, its not in git master. 
					when you git add, your adding it to the staging area, then you can
					commit after that.... so first add to staging then add to master after that....
					
					
				
				make files that wont get added to staging .gitignore     traversey 18:10
					touch .gitignore, you cant create in the explorer directory, use cmd or bash
					a file wont get added to the staging area when filename is inside gitignore file 
					for example when you when you git add . // adds all to staging
					touch .gitignore cant create in directory use cmd or bash
					then git add . and youll see that whatever files you type inside will not get staged
					so this is for files we dont want to include into our repository in the staging area that is...
					to put whole folder put folder name 
					if you put *.txt it will  get all .txtfiles
					
					
			BRANCHES  
						CREATE AND ADD A NEW BRANCH AND DELETE 	keyword checkout
					---------------------------------------------------					
					git branch branchname  -- to create then checkout
					git checkout branchname -- to get into that a branch
					then git add .   then git commit -m 'message'   then  git push --set-upstream origin branchname --> your all set!
					git checkout master back to master..
					
					 git branch -->To see all branches 
					  
					 to DELETE	1> git checkout branchname   ..you must be inside th branch you want to delete
					 		2> git branch -d branchname
							3> git push origin :branchname    .. to delete the branch off github itself not just the command line
					 
					------------------------------------------------------------------------------------------------------------------------
					
					TO SEE ALL REMOTE BRACHES, AND DELETE A REMOTE!!
					---------------------------------------------------
						to see remotes, type	git branch -M main
					
					TO REMOVE THE REMOTE: git remote rm nameOfRemote-->  ex. = git remote rm heroku
					
					to DELETE BRANCH locally git branch -d nameOfBranch
					to DELETE branch remotely git push origin --delete nameOfBranch
			
			MERGE
					while in the master branch
					git merge branchname
					press i then add a message then uncommented
					esc :wq  enter
			
			Repository into github
					dont forget to git init first in the computer folder
					so go to github.com, make new repository in hub first, copy and past into the 
					commandline 
					this aint perfect, instructions in the github thingie once you create repo...
					*	git remote add origin https://github.com/Joe-Powell/new.git
					*   git push -u origin master
					* enter uname/password prompt
					then everytime you make changes, youll first 
					*git add .
					 then git commit -m 'added changes' in bash..
						command line message, then esc then :wq    
					 now its added to local computer
					 we havent actually pushed it yet so..
					 then git push 	then it will push right to github
					
			TO CLONE   this is an easy way to clone without having to download a zip
				create folder, open with bash so right click on empty folder then in comand
				line type git clone then paste in clone url inside the code of repository 
		
			PULL is where you make changes on github itself and pull into your computer
					or if  someone sends changes to your github repo and you pulll it in
					
					
				
					
					
					
					
					
					
					
